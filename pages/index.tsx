import { doc, getDoc, setDoc } from "firebase/firestore";
import { getSession } from "next-auth/react";
import Head from "next/head";
import { useState, useEffect } from "react";

import Container from "../components/Container";
import MainSign from "../components/MainSign";
import { firestore } from "../firebase/firebase";

type Props = {
  session: any;
};

export default function Home({ session }: Props) {
  if (!session) return <MainSign />;

  const [userCreates, setUserCreate] = useState<boolean>(false);

  const getUserData = async () => {
    if (session) {
      try {
        const docRef = doc(firestore, "users", session?.user?.uid);
        const docSnap = await getDoc(docRef);

        if (docSnap.exists()) {
          console.log("User Already Created");
        } else {
          setUserCreate(true);
        }
      } catch (error) {
        console.log(error);
      }
    } else return;
  };

  const userCreate = async (session: any) => {
    const userDocRef = doc(firestore, "users", session?.user?.uid);
    await setDoc(userDocRef, JSON.parse(JSON.stringify(session)));
  };

  useEffect(() => {
    getUserData();

    if (userCreates) {
      userCreate(session);
    } else return;
  }, [session, firestore, userCreates]);

  return (
    <div>
      <Head>
        <title>Discord Clone</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href="https://www.bing.com/th?id=ALSTU247930B68ED76C8F08617E6559DE8E3B96BC0F73153C44DED6DCD678C245494B&w=148&h=148&c=7&o=6&oif=webp&dpr=1.3&pid=SANGAM"
        />
      </Head>
      <main>
        <Container />
      </main>
    </div>
  );
}

export async function getServerSideProps(context: any) {
  const session = await getSession(context);

  return {
    props: {
      session: session,
    },
  };
}
